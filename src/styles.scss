@use 'sass:map';
@use 'colors';
@use 'components';
@use 'material';
@use 'mixins';
@use 'palette';
@use 'themes';
@use 'variables';

* {
  box-sizing: border-box;
  letter-spacing: normal;
}

html,
body {
  @include mixins.font-size(14px);

  height: 100%;
  margin: 0;
  color: map.get(palette.$at-palette, contrast, canvas);
  font-family: variables.$font-family !important;
  background-color: map.get(palette.$at-palette, canvas);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-weight: variables.$font-weight-bold !important;
}

a {
  color: map.get(palette.$at-palette, primary);
}

@each $key in map-keys(palette.$at-palette-keys) {
  .#{$key} {
    &.at-border {
      border: 2px solid map.get(palette.$at-palette, $key);
    }

    &.at-text {
      color: map.get(palette.$at-palette, $key) !important;
    }

    &.at-color-background {
      color: map.get(palette.$at-palette, contrast, $key) !important;
      background-color: map.get(palette.$at-palette, $key) !important;
    }

    &:not(.neutral).at-alpha-background {
      background-color: map.get(palette.$at-palette, alpha, $key) !important;
    }

    &.neutral.at-alpha-background {
      background-color: map.get(palette.$at-palette, canvas-inset) !important;
    }
  }
}

.at-background {
  background-color: map.get(palette.$at-palette, canvas);
}

.at-alt-background {
  background-color: map.get(palette.$at-palette, canvas-inset);
}

.spacer {
  flex: 1 1 auto;
}

.full-width {
  width: 100%;
}

.full-height-flex {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.at-caption {
  @include mixins.font-size(12px);

  color: var(--color-muted);
}
