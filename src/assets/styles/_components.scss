@use 'sass:map';
@use 'colors';
@use 'mixins';
@use 'variables';

@mixin get-components-styles($theme: variables.$light) {
  $theme-colors: colors.get-theme-colors($theme);

  .loading-spinner-in-button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    padding: 5px 0;
  }

  .dialog-header-with-icon {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin-bottom: 24px;

    .mat-icon {
      margin-bottom: 16px;
    }

    .dialog-header {
      @include mixins.font-size(20px);

      font-weight: variables.$font-weight-bold;
    }
  }

  .button-row-container-end {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    width: 100%;

    .mat-button-base:not(:last-child) {
      margin-right: 8px;
    }
  }

  .board-column {
    overflow: hidden;
    min-width: 275px;
    border-right: 2px solid map.get($theme-colors, 'border');

    @if $theme == variables.$dark {
      background-color: colors.$primer-gray-100;
    } @else {
      // (default) light
      background-color: colors.$cool-gray-10;
    }

    .mat-card:not(:last-of-type) {
      margin-bottom: 8px;
    }

    .board-column-header {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 5px;
      padding: 5px 5px 0 10px;

      .board-column-title-container {
        display: flex;
        flex-direction: row;
        align-items: center;

        .board-column-title {
          @include mixins.font-size(16px);

          font-weight: variables.$font-weight-bold;
        }

        .board-column-application-count {
          @include mixins.font-size(12px);

          display: inline-flex;
          margin-left: 8px;
          padding: 2px 6px;
          border-radius: 6px;
          font-weight: variables.$font-weight-semi-bold;

          @if $theme == variables.$dark {
            background-color: colors.$primer-gray-80;
            color: colors.$primer-gray-20;
          } @else {
            // (default) light
            background-color: colors.$cool-gray-20;
            color: colors.$cool-gray-80;
          }

          &.at-success {
            background-color: map.get($theme-colors, 'success');
            color: map.get($theme-colors, 'invert-text');
          }

          &.at-error {
            background-color: map.get($theme-colors, 'error');
            color: map.get($theme-colors, 'invert-text');
          }

          &.at-accent {
            background-color: map.get($theme-colors, 'accent');
            color: map.get($theme-colors, 'invert-text');
          }

          &.at-primary {
            background-color: map.get($theme-colors, 'primary');
            color: map.get($theme-colors, 'invert-text');
          }
        }
      }
    }

    .cdk-container {
      height: calc(100% - 50px);
    }

    @media (min-width: 375px) {
      min-width: 325px;
    }

    @media (min-width: 768px) {
      .board-column-header {
        margin-bottom: 8px;
        padding: 8px 8px 0 16px;
      }

      .cdk-container {
        height: calc(100% - 52px);
      }
    }
  }

  .tag {
    @include mixins.font-size(12px);

    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 2px 6px;
    border-radius: 100px;
    white-space: nowrap;

    @if $theme == variables.$dark {
      background-color: rgba(colors.$cool-gray-40, $alpha: 0.05);
      border: 2px solid colors.$cool-gray-40;
      color: colors.$cool-gray-40;
    } @else {
      // light
      background-color: rgba(colors.$cool-gray-60, $alpha: 0.05);
      border: 2px solid colors.$cool-gray-60;
      color: colors.$cool-gray-60;
    }

    &.tag-success {
      background-color: rgba(map.get($theme-colors, 'success'), $alpha: 0.05);
      border: 2px solid map.get($theme-colors, 'success');
      color: map.get($theme-colors, 'success');
    }

    &.tag-accent {
      background-color: rgba(map.get($theme-colors, 'accent'), $alpha: 0.05);
      border: 2px solid map.get($theme-colors, 'accent');
      color: map.get($theme-colors, 'accent');
    }

    &.tag-primary {
      background-color: rgba(map.get($theme-colors, 'primary'), $alpha: 0.05);
      border: 2px solid map.get($theme-colors, 'primary');
      color: map.get($theme-colors, 'primary');
    }

    &.tag-error {
      background-color: rgba(map.get($theme-colors, 'error'), $alpha: 0.05);
      border: 2px solid map.get($theme-colors, 'error');
      color: map.get($theme-colors, 'error');
    }
  }

  .application-card {
    .application-card-title {
      margin-bottom: 8px !important;
    }

    &:hover {
      background-color: transparent;
      cursor: grab;
    }

    &:focus {
      outline: none;

      &.at-primary {
        border: 2px solid map.get($theme-colors, 'primary');
      }

      &.at-accent {
        border: 2px solid map.get($theme-colors, 'accent');
      }

      &.at-success {
        border: 2px solid map.get($theme-colors, 'success');
      }

      &.at-error {
        border: 2px solid map.get($theme-colors, 'error');
      }

      &.at-black-white {
        border: 2px solid map.get($theme-colors, 'text');
      }
    }

    .icon-subtitle {
      display: flex;
      flex-direction: row;
      align-items: flex-start;

      @if $theme == variables.$dark {
        color: colors.$primer-gray-30;
      } @else {
        // (default) light theme
        color: colors.$cool-gray-100;
      }

      .small-icon {
        display: inline-flex;
        width: 16px !important;
        height: 16px !important;
        font-size: 16px;
        margin-top: 2px;
        margin-right: 8px;

        svg {
          width: 16px !important;
          height: 16px !important;
        }
      }
    }

    .mat-card-content {
      font-weight: variables.$font-weight-semi-bold;
    }
  }
}
