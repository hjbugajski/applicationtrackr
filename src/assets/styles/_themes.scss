@use '~@angular/material' as mat;
@use 'colors';
@use 'components';
@use 'palettes';
@use 'variables';

@include mat.core();

@function create-theme($primary, $accent, $warn, $is-dark: false) {
  $foreground: palettes.$light-theme-foreground-palette;
  $background: palettes.$light-theme-background-palette;

  @if $is-dark {
    $foreground: palettes.$dark-theme-foreground-palette;
    $background: palettes.$dark-theme-background-palette;
  }

  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: $is-dark,
    foreground: $foreground,
    background: $background
  );
}

$light-theme-primary: mat.define-palette(palettes.$blue-palette);
$light-theme-accent: mat.define-palette(palettes.$purple-palette);
$light-theme-warn: mat.define-palette(palettes.$red-palette);
$light-theme: create-theme($light-theme-primary, $light-theme-accent, $light-theme-warn);

$dark-theme-primary: mat.define-palette(palettes.$blue-palette, 400);
$dark-theme-accent: mat.define-palette(palettes.$purple-palette, 400);
$dark-theme-warn: mat.define-palette(palettes.$red-palette, 400);
$dark-theme: create-theme($dark-theme-primary, $dark-theme-accent, $dark-theme-warn, true);

$typography: mat.define-typography-config(
  $font-family: variables.$font-family,
  $input: mat.define-typography-level(14px, 1.15, 400)
);

@include mat.core($typography);

.at-light-theme {
  @include mat.all-component-themes($light-theme);
  @include components.get-components-styles();
  @include colors.color-classes();
}

.at-dark-theme {
  @include mat.all-component-themes($dark-theme);
  @include components.get-components-styles('dark');
  @include colors.color-classes('dark');
}
